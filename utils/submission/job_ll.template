#== Global directives
#@ shell            = /bin/bash
#@ job_name         = %(jobname)s
#@ job_type         = BLUEGENE
#@ wall_clock_limit = %(wallclock)s
#@ bg_size          = %(bg_size)s
#@ output           = $(job_name).$(jobid).log
#@ error            = $(job_name).$(jobid).err
#@ queue

set -x
#== Extract variables from the scheduler directives
export jobname=$LOADL_JOB_NAME
export jobid=${LOADL_STEP_ID: -7:5}
echo 'Job name & ID: '$jobname', '$jobid

#== Environment & OpenMP definitions
export RANKPNODE=%(rankpnode)s
export NBTHREADS=$(printf $(($LOADL_BG_SIZE * $RANKPNODE)))
export ONT=%(omp_num_threads)s
export RUNDIR=%(rundir)s/$LOADL_BG_SIZE/$NBTHREADS/$ONT
export CURDIR=$(pwd)
export EXEDIR=%(exedir)s
export EXE=dumses
export INPDIR=$CURDIR/
export INP=%(inputfile)s

mkdir -p $RUNDIR
cd $RUNDIR

#== Copy executable and input file
cp $EXEDIR/$EXE .
cp $INPDIR/$INP input

#== Load environment

export OMP_NUM_THREADS=$ONT
export OMP_THREAD_LIMIT=$ONT
export BG_THREADLAYOUT=2

#== Launch the script
runjob --ranks-per-node $RANKPNODE --np $NBTHREADS --env_all --exe ./$EXE

#== Copy log and error files in the $RUNDIR and clean submission directory
mv $CURDIR/$LOADL_STEP_OUT $RUNDIR/.
mv $CURDIR/$LOADL_STEP_ERR $RUNDIR/.
rm $CURDIR/%(inputfile)s $CURDIR/%(jobfile)s